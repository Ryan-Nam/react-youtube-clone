{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/projects/react-youtube-clone/src/app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './app.css';\nimport VideoList from './components/video_list/video_list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    // Fetch from Youtube API - i use postman\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyDok2F1OTxu_JfJnQz2u9mducsHTrT5UHA\", requestOptions).then(response => response.json()) //text -> json : easy to see\n    .then(result => setVideos(result.items)) // update component data\n    .catch(error => console.log('error', error)); //console.log('use Effect');\n  }, []); // - []: only called once when it is mounted.\n  // -   (nothing): whenever 'props', 'state' is updated, call everytimes\n  // - [video, name]: ]whenever these are updated, callback () will be called.\n\n  return /*#__PURE__*/_jsxDEV(VideoList, {\n    videos: videos\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ryan/Desktop/projects/react-youtube-clone/src/app.jsx"],"names":["React","useEffect","useState","VideoList","App","videos","setVideos","requestOptions","method","redirect","fetch","then","response","json","result","items","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb;AACA,UAAMM,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,QAAQ,EAAE;AAFW,KAAvB;AAKAC,IAAAA,KAAK,CAAC,2IAAD,EAA8IH,cAA9I,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EACsC;AADtC,KAEGF,IAFH,CAEQG,MAAM,IAAIR,SAAS,CAACQ,MAAM,CAACC,KAAR,CAF3B,EAE2C;AAF3C,KAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAHlB,EAPa,CAWb;AACD,GAZQ,EAYN,EAZM,CAAT,CAHa,CAgBb;AACA;AACA;;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEZ;AAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAvBQD,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport './app.css';\nimport VideoList from './components/video_list/video_list';\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  \n  useEffect(()=> {\n    // Fetch from Youtube API - i use postman\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyDok2F1OTxu_JfJnQz2u9mducsHTrT5UHA\", requestOptions)\n      .then(response => response.json())  //text -> json : easy to see\n      .then(result => setVideos(result.items)) // update component data\n      .catch(error => console.log('error', error));\n    //console.log('use Effect');\n  }, []); \n  // - []: only called once when it is mounted.\n  // -   (nothing): whenever 'props', 'state' is updated, call everytimes\n  // - [video, name]: ]whenever these are updated, callback () will be called.\n\n  return (\n    <VideoList videos={videos}></VideoList>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}