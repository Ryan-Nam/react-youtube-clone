{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/projects/react-youtube-clone/src/app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [video, setVideos] = useState([]);\n  useEffect(() => {\n    // Fetch from Youtube API - i use postman\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyDok2F1OTxu_JfJnQz2u9mducsHTrT5UHA\", requestOptions).then(response => response.json()) //text -> json : easy to see\n    .then(result => console.log(result)).catch(error => console.log('error', error)); //console.log('use Effect');\n  }, []); // - []: only called once when it is mounted.\n  // -   (nothing): whenever 'props', 'state' is updated, call everytimes\n  // - [video, name]: ]whenever these are updated, callback () will be called.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KFu+77K5DEQ/YXry9U1Vg8zYZY8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ryan/Desktop/projects/react-youtube-clone/src/app.jsx"],"names":["React","useEffect","useState","App","video","setVideos","requestOptions","method","redirect","fetch","then","response","json","result","console","log","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb;AACA,UAAMK,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,QAAQ,EAAE;AAFW,KAAvB;AAKAC,IAAAA,KAAK,CAAC,2IAAD,EAA8IH,cAA9I,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EACsC;AADtC,KAEGF,IAFH,CAEQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHlB,EAPa,CAWb;AACD,GAZQ,EAYN,EAZM,CAAT,CAHa,CAgBb;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBQd,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport './app.css';\n\nfunction App() {\n  const [video, setVideos] = useState([]);\n  \n  useEffect(()=> {\n    // Fetch from Youtube API - i use postman\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyDok2F1OTxu_JfJnQz2u9mducsHTrT5UHA\", requestOptions)\n      .then(response => response.json())  //text -> json : easy to see\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n    //console.log('use Effect');\n  }, []); \n  // - []: only called once when it is mounted.\n  // -   (nothing): whenever 'props', 'state' is updated, call everytimes\n  // - [video, name]: ]whenever these are updated, callback () will be called.\n\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}